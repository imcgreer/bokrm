#!/usr/bin/make

all_detrend2014: initproc biasramp badpix proc1 flats proc2

include Makefile

ifndef UTDATE
	UTARGS := -u 201312,2014
endif

ifndef PROCARGS
	PROCARGS := --nousepixflat --rampcorr --noweightmap
endif

DATAINITARGS := $(LOGARGS) $(DATAARGS) $(UTARGS) $(BANDARGS) 

INITARGS := $(DATAINITARGS) $(MPARGS) $(VERBOSE)

SKYFLATARGS := --masterfringe --masterskyflat


# run the pipeline on g-band dark night to look at CCD3 gradient by only doing
# bias subtraction (-n allows comparison of oscan vs. bias-subtracted) with no
# flat-field correction

testgradient_darknight:
	python bokrmpipe.py -u 20140425,20140427 -b g -vvvv -s oscan,bias2d,proc1 \
	                    --noflatcorr --nocombine -n -o $(TESTDIR)

# checking the CCD3 gradient trend over a night where sky goes from 12K to 1K

testgradient_graynight:
	python bokrmpipe.py -u 20140415 -b g -vvvv -s oscan,bias2d,proc1 \
	                    --noflatcorr --nocombine -n -o $(TESTDIR)

# --frames 2635-2640 (starts at 2635 to do a subset)

testgradient_forgnostic:
	python bokrmpipe.py --obsdb config/sdssrm-bok2014.fits \
	                    -u 20140123,20140415,20140427 -b g -vvvv -s proc1 \
	                    --rampcorr --noflatcorr \
	                    --nogainmul --nocombine --nosavegain \
	                    --noweightmap --tmpdirout -R

# test creating fringe master
# step 1: do illumination correction only
testfringe_initproc:
	make proc2 UTDATE=20140425 \
	         XARGS="--prockey TMPPRO2 --nofringecorr --noskyflatcorr \
	                --noskysub --noweightmap --nodivideexptime \
	                --tmpdirout -R"
# step 2: make a fringe master from a single night
testfringe_makefringe:
	make steps STEPS=fringe UTDATE=20140425 \
	         XARGS="--tmpdirin --tmpdirout"
# step 3: do fringe subtraction
testfringe_applyfringe:
	make proc2 UTDATE=20140425 \
	         XARGS="--prockey TMPPRO3 --noillumcorr --noskyflatcorr \
	                --noskysub --noweightmap --nodivideexptime \
	                --tmpdirin --tmpdirout -R"

# test fringe scaling on a single image
testfringe_checkscale:
	python $(BOKTOOLS)/bokbackground.py $(IMAGE) -f ccdmedian -o atmpback.fits
	python $(BOKTOOLS)/bokimarith.py $(IMAGE) - atmpback.fits -o atmpsub.fits
	python $(BOKTOOLS)/bokimarith.py atmpsub.fits / $(FRINGEIM) -o atmpfrg.fits

